services:
  # Kafka for streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # Apache Spark for ML Training
  spark-master:
    image: bitnami/spark:latest
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  spark-worker:
    image: bitnami/spark:latest
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1

  # Trino for querying
  trino:
    image: trinodb/trino:latest
    ports:
      - "8081:8080"

  # Song Recommendation App (Backend API)
  song-recommendation-app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - kafka
      - minio
      - spark-master
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MINIO_ENDPOINT=minio:9000
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./data:/app/data
      - ./src:/app/src

  # Streamlit for visualization (Frontend)
  streamlit-app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8501:8501"
    depends_on:
      - song-recommendation-app
    environment:
      - API_URL=http://song-recommendation-app:5000
    volumes:
      - ./data:/app/data
      - ./src:/app/src
    command: ["streamlit", "run", "src/streamlit_app.py", "--server.address", "0.0.0.0"]

volumes:
  minio_data: