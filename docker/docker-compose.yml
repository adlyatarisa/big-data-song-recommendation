services:
  # Kafka for streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: docker-zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: docker-kafka-1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    container_name: docker-minio-1
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  # Streaming Service
  streaming-service:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: streaming-service
    volumes:
      - ../data:/app/data
    command: python src/streaming_service.py
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka
      - minio
    restart: unless-stopped

  # Auto-Retraining Service  
  training-service:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: training-service
    ports:
      - "8000:8000"
    volumes:
      - ../data:/app/data
    command: python src/training_service.py
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka
      - minio
    restart: unless-stopped

  # Updated API Service
  api-service:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: api-service
    ports:
      - "5000:5000"
    volumes:
      - ../data:/app/data
    command: python src/app_optimized.py
    environment:
      - PYTHONUNBUFFERED=1
      - SPARK_LOCAL_DIRS=/tmp/spark
    depends_on:
      - streaming-service
      - training-service
    deploy:
      resources:
        limits:
          memory: 2G
    restart: unless-stopped

  # Streamlit Dashboard
  dashboard:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: dashboard
    depends_on:
      - api-service
    environment:
      - API_URL=http://api-service:5000
    ports:
      - "8501:8501"
    volumes:
      - ../data:/app/data
    command: streamlit run src/streamlit_app.py --server.address 0.0.0.0

volumes:
  minio_data: